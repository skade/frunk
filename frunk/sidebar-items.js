initSidebarItems({"derive":[["Generic","Derives a Generic instance based on HList for a given Struct or Tuple Struct"],["LabelledGeneric","Derives a Generic instance based on Field + HList for a given Struct (Tuple Structs not supported because they have no labels)"]],"macro":[["Coprod","Returns a type signature for a Coproduct of the provided types"],["Hlist","Returns a type signature for an HList of the provided types"],["field","Used for creating a Field"],["hlist","Returns an `HList` based on the values passed in."],["hlist_pat","Macro for pattern-matching on HLists."],["poly_fn","Returns a polymorphic function for use with mapping/folding heterogeneous types."]],"mod":[["coproduct","Module that holds Coproduct data structures, traits, and implementations"],["generic","This module holds the machinery behind `Generic`."],["hlist","Module that holds HList data structures, implementations, and typeclasses."],["indices","Types used for indexing into HLists and coproducts."],["labelled","This module holds the machinery behind LabelledGeneric."],["monoid","Module for holding Monoid typeclass definitions and default implementations"],["path","Holds models, traits, and logic for generic traversal of models"],["prelude","Traits that need to be imported for the complete `frunk` experience."],["semigroup","Module for holding the Semigroup typeclass definition and typeclass instances"],["traits","Traits that provide generic functionality for multiple types in frunk"],["validated","Module for holding Validated logic"]]});